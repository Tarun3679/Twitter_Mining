async def async_textract_processing(bucket_name, document_keys):
    # Initialize Textract client
    textract_client = boto3.client('textract')

    tasks = []
    for key in document_keys:
        # Create an asynchronous task for each document
        task = asyncio.create_task(process_document(textract_client, bucket_name, key))
        tasks.append(task)

    # Wait for all tasks to complete
    await asyncio.gather(*tasks)

async def process_document(client, bucket_name, document_key):
    response = await loop.run_in_executor(None, lambda: client.start_document_text_detection(
        DocumentLocation={'S3Object': {'Bucket': bucket_name, 'Name': document_key}}
    ))
    job_id = response['JobId']

    # Poll for job completion
    while True:
        response = await loop.run_in_executor(None, lambda: client.get_document_text_detection(JobId=job_id))
        status = response['JobStatus']

        if status in ['SUCCEEDED', 'FAILED']:
            break
        await asyncio.sleep(5)

    # Handle the result, e.g., save it to a database or process it further
    # You can access the text and other information from the Textract response.
    print(f"Document {document_key} processed!")

if __name__ == "__main__":
    # Specify your S3 bucket name and document keys
    bucket_name = 'your-s3-bucket-name'
    document_keys = ['document1.pdf', 'document2.pdf']

    # Create an event loop
    loop = asyncio.get_event_loop()
    loop.run_until_complete(async_textract_processing(bucket_name, document_keys))
    loop.close()
